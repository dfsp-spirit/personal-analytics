version: '3.8'

# Note on .env file location:
#
# If you are running the backend in docker-compose (with working dir repo root), you need to place the .env file in the repo root directory.
# That is because env variables like DATABASE_USER used in the docker-compose.yml file as variables are automatically loaded by docker-compose
# from a .env file in the same directory (the repo root). And the docker-compose.yml file exposes those env variables to the postgres and backend services
# as environment variables.
#
# For bare metal, you will need to place the .env file in the backend/ directory, as you will start uvicorn from the backend/ directory, and the backend
# code loads the .env file from the current working directory.
# For bare metal, you can also set the env variables in your shell environment instead of using a .env file, of course.
#

services:
  postgres:
    image: postgres:15
    container_name: personal-analytics-db
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    ports:
      - "${DATABASE_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USER} -d ${DATABASE_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: personal-analytics-api
    environment:
      DATABASE_URL: postgresql://${DATABASE_USER}:${DATABASE_PASSWORD}@postgres:5432/${DATABASE_NAME}
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./backend/src:/app/src
    command: uvicorn personal_analytics_backend.api:app --host 0.0.0.0 --port 8000 --reload

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: personal-analytics-frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
    environment:
      - API_BASE_URL=http://localhost:8000
    # No env_file needed for frontend

volumes:
  postgres_data: